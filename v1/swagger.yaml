openapi: 3.0.1
info:
  title: Perman-api
  description: This is the API description for Perman-api.
  termsOfService: https://www.youtube.com/watch?v=dQw4w9WgXcQ
  contact:
    email: mumingpo@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
externalDocs:
  description: Error responses
  url: https://github.com/mumingpo/perman-api-specification/blob/main/v1/errorResponses.js
servers:
- url: https://api.perman.io/v1
- url: http://api.perman.io/v1
tags:
- name: user
  description: Operations concerning individual users
- name: trackItem
  description: Operations accessing individual track items
- name: record
  description: Operations accessing individual records
- name: misc
  description: Miscellaneous operations
paths:
  /user/registerFromEmail:
    post:
      tags:
      - user
      summary: Create a new user from an email address
      operationId: registerFromEmail
      requestBody:
        description: An object containing the email address used for registration
        content:
          application/json:
            schema:
              required:
              - email
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: somebody@example.com
        required: true
      responses:
        200:
          description: An account has been created and a verificaiton link has been
            sent through the email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: The email address cannot be used to create an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /user/resendVerificationLink:
    post:
      tags:
      - user
      summary: Resend the email verification link through email
      operationId: resendVerificationLink
      requestBody:
        description: An object containing the email address used for registration
        content:
          application/json:
            schema:
              required:
              - email
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: somebody@example.com
        required: true
      responses:
        200:
          description: A verificaiton link has been sent through the email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: An account with this email address does not exist or have already been validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /user/checkUsername:
    get:
      tags:
      - user
      summary: Check whether a username is in-use
      operationId: checkUsername
      parameters:
      - name: username
        in: query
        description: A username to be checked
        required: true
        schema:
          pattern: ^[A-Za-z][A-Za-z0-9]{5,29}$
          type: string
      responses:
        200:
          description: Result on whether username is available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
  /user/verifyEmailAndInitialize:
    post:
      tags:
      - user
      summary: Verify the email address used to create the account and initialize
        user
      operationId: verifyEmail
      requestBody:
        description: An object containing the email address, token, and the new username
          and password needed for the initialization process
        content:
          application/json:
            schema:
              required:
              - email
              - newPassword
              - newUsername
              - token
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: somebody@example.com
                token:
                  type: string
                  description: A 16 byte authentication token encoded in base16 representation
                  example: 0123456789abcdef0123456789abcdef
                newUsername:
                  pattern: ^[A-Za-z][0-9A-Za-z]{5,29}$
                  type: string
                  example: DebraAbraca03
                newPassword:
                  type: string
                  example: BadPa$$w0rd
        required: true
      responses:
        200:
          description: Email has been verified and the account has been initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /user/changePassword:
    post:
      tags:
      - user
      summary: Change user's password using the current password
      operationId: changePassword
      requestBody:
        description: An object containing the old and new passwords
        content:
          application/json:
            schema:
              required:
              - newPassword
              - oldPassword
              type: object
              properties:
                oldPassword:
                  type: string
                  example: BadPa$$w0rd
                newPassword:
                  type: string
                  example: CorrectHorseBatteryStaple
        required: true
      responses:
        200:
          description: Password has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Password cannot be updated as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /user/requestPasswordReset:
    post:
      tags:
      - user
      summary: Request a password reset email
      operationId: requestPasswordReset
      requestBody:
        description: An object containing the email address of the account
        content:
          application/json:
            schema:
              required:
              - email
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: somebody@example.com
        required: true
      responses:
        200:
          description: A password reset email has been sent to the email associated
            with the account, if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Account cannot be initialized due to problems within submitted
            form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /user/resetPassword:
    post:
      tags:
      - user
      summary: Use a token to reset the password
      operationId: resetPassword
      requestBody:
        description: An object containing the email address and temporary token of
          the account
        content:
          application/json:
            schema:
              required:
              - email
              - token
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: somebody@example.com
                token:
                  type: string
                  description: A 16 byte authentication token encoded in base16 representation
                  example: 0123456789abcdef0123456789abcdef
        required: true
      responses:
        200:
          description: Password has been reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Password cannot be reset as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /user/userProfile:
    get:
      tags:
      - user
      summary: Get the current values of user profile
      operationId: getProfile
      responses:
        200:
          description: Successfully retrieved the user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
    post:
      tags:
      - user
      summary: Update user profile
      operationId: updateProfile
      requestBody:
        description: An object containing the user profile fields to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        200:
          description: User profile has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: User profile cannot be updated as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body

  /trackItem:
    post:
      tags:
      - trackItem
      summary: Create a track item
      operationId: createTrackItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackItem'
        required: true
      responses:
        201:
          description: Resource successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Resource cannot be created as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /trackItem/{trackItemId}:
    get:
      tags:
      - trackItem
      summary: Fetch a track item
      operationId: getTrackItemById
      parameters:
      - name: trackItemId
        in: path
        description: Primary key of the step object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
    put:
      tags:
      - trackItem
      summary: Update a track item
      operationId: updateTrackItemById
      parameters:
      - name: trackItemId
        in: path
        description: Primary key of the track item object referenced
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackItem'
        required: true
      responses:
        200:
          description: Resource successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: The resource cannot be updated as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
    delete:
      tags:
      - trackItem
      summary: Delete a track item
      operationId: deleteTrackItemById
      parameters:
      - name: trackItemId
        in: path
        description: Primary key of the track item object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"



  /step:
    post:
      tags:
      - record
      summary: Create a step
      operationId: createStep
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedRecord'
        required: true
      responses:
        201:
          description: Resource successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Resource cannot be created as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /step/{stepId}:
    get:
      tags:
      - record
      summary: Fetch a step
      operationId: getStepById
      parameters:
      - name: stepId
        in: path
        description: Primary key of the step object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
    put:
      tags:
      - record
      summary: Update a step
      operationId: updateStepById
      parameters:
      - name: stepId
        in: path
        description: Primary key of the step object referenced
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedRecord'
        required: true
      responses:
        200:
          description: Resource successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: The resource cannot be updated as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
    delete:
      tags:
      - record
      summary: Delete a step
      operationId: deleteStepById
      parameters:
      - name: stepId
        in: path
        description: Primary key of the step object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
  /mile:
    post:
      tags:
      - record
      summary: Create a mile
      operationId: createMile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedRecord'
        required: true
      responses:
        201:
          description: Resource successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Resource cannot be created as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /mile/{mileId}:
    get:
      tags:
      - record
      summary: Fetch a mile
      operationId: getMileById
      parameters:
      - name: mileId
        in: path
        description: Primary key of the mile object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
    put:
      tags:
      - record
      summary: Update a mile
      operationId: updateMileById
      parameters:
      - name: mileId
        in: path
        description: Primary key of the mile object referenced
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedRecord'
        required: true
      responses:
        200:
          description: Resource successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: The resource cannot be updated as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
    delete:
      tags:
      - record
      summary: Delete a mile
      operationId: deleteMileById
      parameters:
      - name: mileId
        in: path
        description: Primary key of the mile object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
  /league:
    post:
      tags:
      - record
      summary: Create a league
      operationId: createLeague
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedRecord'
        required: true
      responses:
        201:
          description: Resource successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: Resource cannot be created as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
  /league/{leagueId}:
    get:
      tags:
      - record
      summary: Fetch a league
      operationId: getLeagueById
      parameters:
      - name: leagueId
        in: path
        description: Primary key of the league object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
    put:
      tags:
      - record
      summary: Update a league
      operationId: updateLeagueById
      parameters:
      - name: leagueId
        in: path
        description: Primary key of the league object referenced
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedRecord'
        required: true
      responses:
        200:
          description: Resource successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        422:
          description: The resource cannot be updated as requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
      x-codegen-request-body-name: body
    delete:
      tags:
      - record
      summary: Delete a league
      operationId: deleteLeagueById
      parameters:
      - name: leagueId
        in: path
        description: Primary key of the league object referenced
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Resource successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
  /CSRFToken:
    get:
      summary: Obtain a CSRFToken to put into request headers
      operationId: getCSRFToken
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                type: object
                required:
                - csrfToken
                properties:
                  csrfToken:
                    type: string
        408:
          $ref: "#/components/responses/408"
        413:
          $ref: "#/components/responses/413"
        429:
          $ref: "#/components/responses/429"
        431:
          $ref: "#/components/responses/431"
        500:
          $ref: "#/components/responses/500"
        503:
          $ref: "#/components/responses/503"
  /porn:
    get:
      tags:
      - misc
      summary: Attempt to access a pornographic resource from this server
      responses:
        418:
          description: :(
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FailureResponse'
components:
  schemas:
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
          example: Debra
        lastName:
          type: string
          example: Abraca
        birthDate:
          type: string
          format: date
          example: 2000-01-01
        timeZone:
          type: string
          format: IANA
          example: America/New_York
        locale:
          type: string
          format: LDML
          example: en-US
        privacyScope:
          type: string
          example: friends
          enum:
          - public
          - friends
          - private
      xml:
        name: UserProfile
    TrackItem:
      type: object
      required:
        - createdAt
        - title
        - description
        - dueDate
        - priority
      properties:
        createdAt:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        priority:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
      xml:
        name: TrackItem
    VersionedRecord:
      required:
      - createdAt
      - description
      - displayName
      - title
      - verifiedContemporaneousRecord
      - version
      type: object
      properties:
        displayName:
          type: string
          example: Jogging
        version:
          minimum: 1
          type: integer
          example: 1
        createdAt:
          type: string
          format: date-time
        title:
          type: string
          example: Running along trail
        description:
          type: string
          example: Running a stretch of 1 mile along the Minutemen bike trail.
        verifiedContemporaneousRecord:
          type: boolean
          example: true
        parent:
          type: integer
          description: The primary key of the parent record, if exists
        children:
          type: array
          items:
            type: integer
          description: The primary key of the children records, if exist
      xml:
        name: VersionedRecord
    SuccessResponse:
      type: object
      properties:
        data:
          type: object
          properties: {}
          description: An object carrying a payload of data
      description: Request has been processed successfully
    FailureResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          required:
          - statusCode
          - message
          properties:
            statusCode:
              type: integer
            message:
              type: string
            errorCode:
              type: string
            scope:
              type: string
      description: Request failed due to a problem with the request
      externalDocs:
        description: Failure responses
        url: https://github.com/mumingpo/perman-api-specification/blob/main/v1/failureResponses.js
    ErrorResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          required:
          - statusCode
          - message
          properties:
            statusCode:
              type: integer
            message:
              type: string
            errorCode:
              type: string
            scope:
              type: string
          description: A message indicating the problem experienced by the server
      description: Request failed due to a problem with the server
  responses:
    '400':
      description: The request has been malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '401':
      description: User must log in to perform this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '403':
      description: User is not authorized to perform this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '404':
      description: The requested resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '408':
      description: Request has timed out
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '413':
      description: The request payload is too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '429':
      description: User have made too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '431':
      description: The request header is too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailureResponse'
    '500':
      description: The server has encountered an internal error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '503':
      description: The server is temporarily unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    googleIdentity:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://www.google.com/
          tokenUrl: balabala
          refreshUrl: balabala
          scopes: {}
security:
  - googleIdentity: []
